package com.kadirayk.ireadnothing.database;

import java.util.ArrayList;
import java.util.List;

import com.kadirayk.ireadnothing.model.YMLE;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.SQLException;
import android.database.sqlite.SQLiteDatabase;

public class YMLEDataSource {

	private SQLiteDatabase database;
	private MySQLiteHelper dbHelper;
	private String[] allColumns = { MySQLiteHelper.YMLES_COLUMN_ID,
			MySQLiteHelper.YMLES_COLUMN_PLACE,
		    MySQLiteHelper.YMLES_COLUMN_TITLE,
		    MySQLiteHelper.YMLES_COLUMN_AUTHOR,
		    MySQLiteHelper.YMLES_COLUMN_URL,
		    MySQLiteHelper.YMLES_COLUMN_DATE };	
	
	public YMLEDataSource(Context context) {
	    dbHelper = new MySQLiteHelper(context, MySQLiteHelper.DATABASE_NAME, null, MySQLiteHelper.DATABASE_VERSION);
	}

	public void open() throws SQLException {
	    database = dbHelper.getWritableDatabase();
	}

	public void close() {
	    dbHelper.close();
	}
	
	public YMLE createYMLE(int place, String title, String author, String url, String date) {
		title = title.trim();
		author = author.trim();
		url = url.trim();
		date = date.trim();
		
		ContentValues values = new ContentValues();
		values.put(MySQLiteHelper.YMLES_COLUMN_PLACE, place);
	    values.put(MySQLiteHelper.YMLES_COLUMN_TITLE, title);
	    values.put(MySQLiteHelper.YMLES_COLUMN_AUTHOR, author);
	    values.put(MySQLiteHelper.YMLES_COLUMN_URL, url);
	    values.put(MySQLiteHelper.YMLES_COLUMN_DATE, date);
	    
	    long insertId = database.insert(MySQLiteHelper.TABLE_YMLES, null,
	        values);
	    Cursor cursor = database.query(MySQLiteHelper.TABLE_YMLES,
	        allColumns, MySQLiteHelper.YMLES_COLUMN_ID + " = " + insertId, null,
	        null, null, null);
	    cursor.moveToFirst();
	    YMLE newYMLE = cursorToYMLE(cursor);
	    cursor.close();
	    return newYMLE;
	  }
	
	public void deleteYMLE(YMLE ymle) {
	    long id = ymle.getId();
	    System.out.println("ymle deleted with id: " + id);
	    database.delete(MySQLiteHelper.TABLE_YMLES, MySQLiteHelper.YMLES_COLUMN_ID
	        + " = " + id, null);
	  }
	
	public List<YMLE> getAllYMLES() {
	    List<YMLE> ymles = new ArrayList<YMLE>();

	    Cursor cursor = database.query(MySQLiteHelper.TABLE_YMLES,
	        allColumns, null, null, null, null, MySQLiteHelper.YMLES_COLUMN_PLACE + " ASC");

	    cursor.moveToFirst();
	    while (!cursor.isAfterLast()) {
	      YMLE ymle = cursorToYMLE(cursor);
	      ymles.add(ymle);
	      cursor.moveToNext();
	    }
	    
	    cursor.close();
	    return ymles;
	  }
	
	public String getLastDate(){
		String lastDate = "";
		
		Cursor cursor = database.rawQuery("SELECT " + MySQLiteHelper.YMLES_COLUMN_DATE +" FROM "
								+ MySQLiteHelper.TABLE_YMLES +" ORDER BY "
								+ MySQLiteHelper.YMLES_COLUMN_ID + " DESC LIMIT 1", null);
//		cursor.moveToFirst();
		if(cursor!=null){
			lastDate = cursor.getString(5);
		}
		return lastDate;
	}
	
	private YMLE cursorToYMLE(Cursor cursor) {
		YMLE ymle = new YMLE();
		ymle.setId(cursor.getLong(0));
		ymle.setPlace(cursor.getInt(1));
		ymle.setTitle(cursor.getString(2));
		ymle.setAuthor(cursor.getString(3));
		ymle.setUrl(cursor.getString(4));
		ymle.setDate(cursor.getString(5));
	    return ymle;
	  }
	
}
